package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/AntonioTrupac/socialHabitsTracker/graph/customTypes"
)

// CreateHabit is the resolver for the createHabit field.
func (r *mutationResolver) CreateHabit(ctx context.Context, input *customTypes.CreateHabitInput) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: CreateHabit - createHabit"))
}

// UpdateHabit is the resolver for the updateHabit field.
func (r *mutationResolver) UpdateHabit(ctx context.Context, id int, input *customTypes.CreateHabitInput) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: UpdateHabit - updateHabit"))
}

// DeleteHabit is the resolver for the deleteHabit field.
func (r *mutationResolver) DeleteHabit(ctx context.Context, id int) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: DeleteHabit - deleteHabit"))
}

// CompleteHabit is the resolver for the completeHabit field.
func (r *mutationResolver) CompleteHabit(ctx context.Context, id int) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: CompleteHabit - completeHabit"))
}

// SkipHabit is the resolver for the skipHabit field.
func (r *mutationResolver) SkipHabit(ctx context.Context, id int) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: SkipHabit - skipHabit"))
}

// GetHabits is the resolver for the getHabits field.
func (r *queryResolver) GetHabits(ctx context.Context) ([]*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: GetHabits - getHabits"))
}

// GetHabit is the resolver for the getHabit field.
func (r *queryResolver) GetHabit(ctx context.Context, id int) (*customTypes.Habit, error) {
	panic(fmt.Errorf("not implemented: GetHabit - getHabit"))
}
