package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/AntonioTrupac/socialHabitsTracker/graph/customTypes"
)

// CreateMood is the resolver for the createMood field.
func (r *mutationResolver) CreateMood(ctx context.Context, input customTypes.MoodInput) (*customTypes.Mood, error) {
	panic(fmt.Errorf("not implemented: CreateMood - createMood"))
}

// UpdateMood is the resolver for the updateMood field.
func (r *mutationResolver) UpdateMood(ctx context.Context, id int, input *customTypes.MoodInput) (*customTypes.Mood, error) {
	panic(fmt.Errorf("not implemented: UpdateMood - updateMood"))
}

// DeleteMood is the resolver for the deleteMood field.
func (r *mutationResolver) DeleteMood(ctx context.Context, id int) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteMood - deleteMood"))
}

// GetMoods is the resolver for the getMoods field.
func (r *queryResolver) GetMoods(ctx context.Context) ([]*customTypes.Mood, error) {
	panic(fmt.Errorf("not implemented: GetMoods - getMoods"))
}

// GetMood is the resolver for the getMood field.
func (r *queryResolver) GetMood(ctx context.Context, id int) (*customTypes.Mood, error) {
	panic(fmt.Errorf("not implemented: GetMood - getMood"))
}
