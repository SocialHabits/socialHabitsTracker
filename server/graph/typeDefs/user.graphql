type User {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    Address: [Address!]!
    Role: [Role!]!
}

type Address {
    id: ID!
    street: String!
    city: String!
    country: String!
    userId: ID!
}

type Role {
    id: ID!
    name: String!
}

input UserInput {
    firstName: String!
    lastName: String!
    email: String!
    password: String!
    address: [AddressInput!]!
}

input AddressInput {
    street: String!
    city: String!
    country: String!
}

extend type Query {
    getUser(id: ID!): User!
    getUsers: [User!]!
}

extend type Mutation {
    createUser(input: UserInput!): User!
    updateUser(id: ID!, input: UserInput!): User!
    deleteUser(id: ID!): User!
}